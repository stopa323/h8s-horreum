# Test application and Docker container building

name: Build

on:
  push:
    branches-ignore:
      - master
      - stage
  pull_request:
    branches:
      - master
      - stage

jobs:
  createSlackMessage:
    name: Create build status message
    runs-on: ubuntu-latest
    outputs:
      slackMessageTs: ${{ fromJson(steps.create_message.outputs.slackMethodResults).ts }}
      sha8: ${{ steps.slug.outputs.sha8 }}
    steps:
      - name: Get SHA slug
        id: slug
        run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
      - name: Post message to Slack channel
        uses: stopa323/slack-web-client@v1.0
        id: create_message
        with:
          slackToken: ${{ secrets.SLACK_BOT_TOKEN }}
          slackMethodArgs: |
            {
              "channel": "C01667Y1K8U",
              "attachments": [
                {
                  "color": "#fbc531",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": ":bomb: Build <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|*#${{ github.run_number }}*> started. Triggered with (<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ steps.slug.outputs.sha8 }}>) on ${{ github.repository }} by ${{ github.actor }}"
                      }
                    }
                  ]
                }
              ]
            }
  runTests:
    runs-on: ubuntu-latest
    needs: [createSlackMessage]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Run pytest
        run: |
          bash scripts/test.sh

  buildImage:
    runs-on: ubuntu-latest
    needs: [createSlackMessage]
    steps:
      - uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          bash scripts/build.sh

  updateSlackMessage:
    runs-on: ubuntu-latest
    needs: [runTests, buildImage, createSlackMessage]
    if: always()
    steps:
      - name: Send success message
        if: needs.runTests.result == 'success' && needs.buildImage.result == 'success'
        uses: stopa323/slack-web-client@v1.0
        with:
          slackToken: ${{ secrets.SLACK_BOT_TOKEN }}
          slackAPIMethod: chat.update
          slackMethodArgs: |
            {
              "channel": "C01667Y1K8U",
              "ts": "${{ needs.createSlackMessage.outputs.slackMessageTs }}",
              "attachments": [
                {
                  "color": "#4cd137",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": ":frog: Build <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|*#${{ github.run_number }}*> succeeded. Triggered with (<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ needs.createSlackMessage.outputs.sha8 }}>) on ${{ github.repository }} by ${{ github.actor }}"
                      }
                    }
                  ]
                }
              ]
            }
      - name: Send fail message
        if: needs.runTests.result == 'failure' || needs.buildImage.result == 'failure'
        uses: stopa323/slack-web-client@v1.0
        with:
          slackToken: ${{ secrets.SLACK_BOT_TOKEN }}
          slackAPIMethod: chat.update
          slackMethodArgs: |
            {
              "channel": "C01667Y1K8U",
              "ts": "${{ needs.createSlackMessage.outputs.slackMessageTs }}",
              "attachments": [
                {
                  "color": "#e84118",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": ":boom: Build <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|*#${{ github.run_number }}*> *failed*. Triggered with (<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ needs.createSlackMessage.outputs.sha8 }}>) on ${{ github.repository }} by ${{ github.actor }}"
                      }
                    }
                  ]
                }
              ]
            }
